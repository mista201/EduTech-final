@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Danh sách khoá học";
    int i = 0;
}
@model List<EduTech.Models.Course>

<div class="container-fluid mt-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Dashboard")" class="text-decoration-none">
                    <i class="bi bi-house-door"></i> Back to Dashborad
                </a>
            </li>
            
        </ol>
    </nav>

    <div class="card">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="card-title">Danh sách khóa học</h2>
                @* Người dùng có policy  CanManageClasses thì mới hiển thị button Thêm lớp học*@
                @if ((await AuthorizationService.AuthorizeAsync(User, "CanManageCourses")).Succeeded)
                {
                    <a href="@Url.Action("Add", "Course")" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-2"></i>Thêm khóa học
                    </a>
                }
                
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-search"></i></span>
                        <input type="text" class="form-control" id="searchInput" placeholder="Tìm kiếm khóa học...">
                    </div>
                </div>
            </div>

            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>STT</th>
                            <th>Tên khóa học</th>
                            <th>Mô tả</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var course in Model)
                        {
                            <tr>
                                <td>@(++i)</td>
                                <td>@course.Name</td>
                                <td>@course.Description</td>
                                <td>
                                    @if ((await AuthorizationService.AuthorizeAsync(User, "CanManageCourses")).Succeeded)
                                    {

                                        <a class="btn btn-sm btn-outline-primary me-2" href="@Url.Action("Edit", "Course", new { id = course.Id })">
                                            <i class="bi bi-pencil"></i> Sửa
                                        </a>
                                        <form method="post" action="@Url.Action("Delete", "Course")" style="display:inline;">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="Id" value="@course.Id" />
                                            <button type="submit" class="btn btn-sm btn-outline-danger">
                                                <i class="bi bi-trash"></i> Xóa
                                            </button>
                                        </form>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
                          