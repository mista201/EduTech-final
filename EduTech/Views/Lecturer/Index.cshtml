@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Danh sách giảng viên";
    int i = 1;
}

@model IEnumerable<ApplicationUser>

<div class="container-fluid mt-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Dashboard")" class="text-decoration-none">
                    <i class="bi bi-house-door"></i> Back to Dashborad
                </a>
            </li>

        </ol>
    </nav>

    <div class="card">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="card-title">Danh sách giảng viên</h2>
                @* Người dùng có policy CanManageStudentsLectures thì mới hiển thị button Thêm giảng viên*@
                @if ((await AuthorizationService.AuthorizeAsync(User, "CanManageStudentsLectures")).Succeeded)
                {
                    <a asp-action="Add" asp-controller="Lecturer" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-2"></i>Thêm giảng viên
                    </a>
                }
            </div>

            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>STT</th>
                            <th>Tên giảng viên</th>
                            <th>Email</th>
                            <th>SĐT</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var user in Model) {
                            <tr>
                                <td>@(i++)</td>
                                <td>@user.Name</td>
                                <td>@user.Email</td>
                                <td>@user.PhoneNumber</td>
                                <td>
                                    @* Người dùng có policy CanManageStudentsLectures thì mới hiển thị nút sửa giảng viên*@
                                    @if (User != null && (await AuthorizationService.AuthorizeAsync(User,
                                   "CanManageStudentsLectures")).Succeeded)
                                    {
                                        <a class="btn btn-sm btn-outline-primary me-2" asp-action="Edit"
                                           asp-controller="Lecturer" asp-route-id="@user.Id">
                                            <i class="bi bi-pencil"></i> Sửa
                                        </a>
                                    }
                                    @* Người dùng có policy CanDeleteStudentsLectures thì mới hiển thị nút xoá giảng viên *@
                                    @if (User != null && (await AuthorizationService.AuthorizeAsync(User,
                                   "CanDeleteStudentsLectures")).Succeeded)
                                    {
                                        <form method="post" asp-action="Delete" asp-controller="Lecturer" asp-route-id="@user.Id"
                                              style="display:inline;">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-sm btn-outline-danger me-2">
                                                <i class="bi bi-trash"></i> Xóa
                                            </button>
                                        </form>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

